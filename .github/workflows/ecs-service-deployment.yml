name: Deploy ECS service

on:
  workflow_dispatch:
    types: [deploy-generator-command]
    inputs:
      generator_name:
        description: The name of the application generator
        required: true
      docker_image_uri:
        description: URI to download the docker image
        required: true
      version:
        description: The version of the docker image to be deployed
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ github.event.inputs.generator_name }} \
          --query taskDefinition > task-definition.json

      - name: Update task-definition.json with given image
        id: update
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ github.event.inputs.generator_name }}
          image: ${{ github.event.inputs.docker_image_uri }}:${{ github.event.inputs.version }}

      - name: Deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.update.outputs.task-definition }}
          service: ${{ github.event.inputs.generator_name }}
          cluster: ecs-deployments-poc
          wait-for-service-stability: true